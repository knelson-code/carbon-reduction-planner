// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  password      String
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  organizations Organization[]
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Organization {
  id          String   @id @default(cuid())
  name        String
  baseYear    Int      @default(2023)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  scopes      EmissionScope[]
}

model EmissionScope {
  id             String   @id @default(cuid())
  name           String   // "Scope 1", "Scope 2", "Scope 3"
  scopeNumber    Int      // 1, 2, or 3
  total          Float    @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  
  categories     EmissionCategory[]
}

model EmissionCategory {
  id          String   @id @default(cuid())
  name        String   // e.g., "Stationary Combustion", "Purchased Goods & Services"
  key         String   // e.g., "stationary_combustion", "purchased_goods"
  baseline    Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  scopeId     String
  scope       EmissionScope @relation(fields: [scopeId], references: [id], onDelete: Cascade)
  
  tactics     ReductionTactic[]
}

model ReductionTactic {
  id                        String   @id @default(cuid())
  name                      String
  order                     Int      @default(1)
  addressableTons           Float    @default(0)
  reductionPotentialPercent Float    @default(10)
  penaltyPercent            Float    @default(0)
  implementedPercent        Float    @default(0)
  calculatedReductionTons   Float    @default(0)
  startYear                 Int
  endYear                   Int
  capex                     Float    @default(0)
  annualOpex                Float    @default(0)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  
  categoryId                String
  category                  EmissionCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}
